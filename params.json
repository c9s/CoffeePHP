{"name":"Gutscript","tagline":"Gutscript is a language makes your life easier, it let you write less code to compile a workable PHP code.","body":"Gutscript\r\n==================\r\n[![Build Status](https://secure.travis-ci.org/c9s/gutscript.png)](http://travis-ci.org/c9s/gutscript)\r\n\r\nGutscript is a language makes your life easier,\r\nit allows you to write less code to produce equivalent PHP code.\r\n\r\nGutscript compiler is written in Go, Go is faster 10+ times than PHP, thus the\r\ncompilation is fast, and of course you can compile sources concurrently.\r\n\r\nGutscript takes the good stuffs from Haskell, Perl6, Go and CoffeeScript, you can write\r\nshorter code to generate a equivalent PHP code. e.g. To define a function, we use:\r\n\r\n```hs\r\nhello :: (name)-> \"Hello #{name}!\"\r\n```\r\n\r\nWhich is shorter than writing:\r\n\r\n```php\r\nfunction hello($name) {\r\n    return \"Hello \" . $name . \"!\";\r\n}\r\n```\r\n\r\nGutscript aims to provide a simple optimizer to do optimizations like \"dead\r\ncode elimination\"..\r\n\r\nSo if you have framework with development/production mode, this dead code\r\nelimination could improve the overhead of mode checking for your production\r\nsite.\r\n\r\nFor more details, please check the `docs` for the language synopsis.\r\n\r\n\r\nGutscript aims to be\r\n---------------------\r\n\r\n* simple to learn.\r\n* easy to use.\r\n* fast compilation.\r\n* shorter code.\r\n* phpdoc friendly.\r\n\r\n\r\nBuild\r\n---------\r\nSimply run make to produce the parser:\r\n\r\n    git clone http://github.com/c9s/gutscript\r\n    cd gutscript\r\n    source goenv\r\n    make\r\n\r\nSynopsis\r\n---------\r\nFor more language details, please check the `docs` for the language synopsis.\r\n\r\n```coffee\r\nclass Person\r\n    # Print the name\r\n    say :: (name) -> \"Hello #{name}, Good morning\"\r\n\r\n    getPhone :: -> \"12345678\"\r\n\r\n    setName :: (string name) -> @name = name\r\n\r\nif str =~ /[a-z]/\r\n    say \"matched!\"\r\n```\r\n        \r\nThe above code compiles to:\r\n\r\n```php\r\nclass Person {\r\n    /**\r\n     * Print the name\r\n     * \r\n     * @param mixed $name\r\n     */\r\n    function say($name) {\r\n        return \"Hello \" . $name . ', Good morning';\r\n    }\r\n\r\n    function getPhone() {\r\n        return \"12345678\";\r\n    }\r\n\r\n    /**\r\n     * @param string $name\r\n     */\r\n    function setName($name) {\r\n        $this->name = $name;\r\n    }\r\n}\r\nif ( preg_match('[a-z]',$str) ) {\r\n    echo \"matched!\";\r\n}\r\n```\r\n\r\nFile Extension\r\n--------------------\r\nThe file extension is named with \"\\*.guts\", the compiler compiles your .guts\r\nfiles to .php files.\r\n\r\n\r\nImplementation\r\n---------------\r\nGutscript uses Go yacc parser generator to generate a LALR(1) parser. \r\n\r\nTo add new syntax, please checkout the parser.y file, which is located in\r\n`src/gutscript/parser.y`\r\n\r\nThe lexer uses concurrent strategy to parse tokens, the state machine runs in\r\nanother goroutine, so the parser receives the tokens from lexer through the\r\nchannel concurrently.\r\n\r\nCodegen is expected to be a separated tree structure traverser, and \r\nwhich is not implemented inside the ast node structure like the\r\ncoffee-script codegen. So the code generator can be PHP code generator, LLVM\r\nbit-code generator or JavaScript generator.\r\n\r\nBasic optimization is on the roadmap. Optimizer uses tree-pattern matching\r\nstrategy to traverse the IR structure. 2 basic optimizations are in the plan --\r\nconstant folding and dead code elimination.\r\n\r\n\r\nCurrent State\r\n-------------\r\nNot ready for production. we're still in alpha stage. but we'd like to recevie\r\ncomments, patches and feature requests.\r\n\r\n\r\nContribution\r\n------------------------------\r\nFeature requests, pull requests, comments are welcomed, but please discuss first \r\non our GitHub issue. Just feel free to drop a line there.\r\n\r\n\r\n\r\nDevelopment\r\n------------------------------\r\n\r\nFirst, go get a workable go compiler at <http://golang.org>\r\n\r\nRun the below command to setup GOPATH:\r\n\r\n\tsource goenv\r\n\r\nRun make to build and test:\r\n\r\n\tmake\r\n\r\nIf you modified the grammar, remember to update the parser:\r\n\r\n    make parser\r\n\r\nRun test cases:\r\n\r\n    make test\r\n\r\nTo dump lex tokens:\r\n\r\n    go run utils/lexdump/main.go src/gutscript/tests/09_class_properties.guts\r\n\r\n\r\nTest the command tool with test case:\r\n\r\n    ./bin/guts src/gutscript/tests/03_if_else_statement.guts\r\n\r\n\r\nGrammar Rules\r\n-------------\r\n\r\n    | Rule                \r\n--- | -------------------\r\n x  | assignment statement\r\n x  | if statement\r\n x  | if else statement\r\n x  | if elseif else statement\r\n x  | function statement\r\n x  | function param list\r\n x  | empty class\r\n x  | class with properties\r\n x  | class with methods\r\n x  | function call as expr\r\n o  | string concatenation\r\n o  | list structure\r\n o  | hash structure\r\n o  | for block\r\n o  | dot range\r\n o  | static method call\r\n o  | method call as expr.\r\n o  | assignment from method call\r\n o  | namespace design\r\n o\t| map\r\n\r\n\r\n\r\nAuthor\r\n-------------\r\n\r\nYo-An Lin (yoanlin93@gmail.com)\r\n\r\n\r\nIRC Channel\r\n----------------\r\nJoin us on irc.freenode.net #gutscript\r\n\r\n\r\nLicense\r\n---------------------\r\nMIT License Copyright (c) 2012 Yo-An Lin\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"UA-2196512-14","note":"Don't delete this file! It's used internally to help with page regeneration."}