
state 0
	$accept: .start $end 

	T_IDENTIFIER  shift 18
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	T_INDENT  shift 14
	T_NEWLINE  shift 13
	T_IF  shift 21
	T_FOR  shift 25
	T_CLASS  shift 22
	T_RETURN  shift 12
	(  shift 15
	-  shift 16
	@  shift 28
	.  error

	expr  goto 6
	number  goto 19
	floating_number  goto 20
	statement  goto 4
	function_decl_statement  goto 8
	function_call  goto 17
	statement_list  goto 3
	class_decl_statement  goto 10
	assignment  goto 7
	if_statement  goto 9
	for_statement  goto 11
	block  goto 5
	top_statement_list  goto 2
	start  goto 1
	class_decl_member  goto 23
	class_decl_method  goto 24

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  top_statement_list.    (1)

	.  reduce 1 (src line 148)


state 3
	top_statement_list:  statement_list.    (2)
	statement_list:  statement_list.T_NEWLINE statement 
	statement_list:  statement_list.T_NEWLINE 

	T_NEWLINE  shift 29
	.  reduce 2 (src line 154)


state 4
	statement_list:  statement.    (6)

	.  reduce 6 (src line 172)


state 5
	statement:  block.    (7)

	.  reduce 7 (src line 180)


state 6
	statement:  expr.    (8)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 8 (src line 182)


state 7
	statement:  assignment.    (9)

	.  reduce 9 (src line 183)


 8: reduce/reduce conflict  (red'ns 10 and 48) on $end
 8: reduce/reduce conflict  (red'ns 10 and 48) on T_OUTDENT
 8: reduce/reduce conflict  (red'ns 10 and 48) on T_NEWLINE
state 8
	statement:  function_decl_statement.    (10)
	class_decl_method:  function_decl_statement.    (48)

	.  reduce 10 (src line 184)


state 9
	statement:  if_statement.    (11)
	if_statement:  if_statement.T_ELSEIF expr block T_NEWLINE 
	if_statement:  if_statement.T_ELSE block T_NEWLINE 

	T_ELSEIF  shift 42
	T_ELSE  shift 43
	.  reduce 11 (src line 185)


state 10
	statement:  class_decl_statement.    (12)

	.  reduce 12 (src line 186)


state 11
	statement:  for_statement.    (13)

	.  reduce 13 (src line 187)


state 12
	statement:  T_RETURN.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 44
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 13
	statement:  T_NEWLINE.    (15)

	.  reduce 15 (src line 189)


state 14
	block:  T_INDENT.statement_list T_OUTDENT 

	T_IDENTIFIER  shift 18
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	T_INDENT  shift 14
	T_NEWLINE  shift 13
	T_IF  shift 21
	T_FOR  shift 25
	T_CLASS  shift 22
	T_RETURN  shift 12
	(  shift 15
	-  shift 16
	@  shift 28
	.  error

	expr  goto 6
	number  goto 19
	floating_number  goto 20
	statement  goto 4
	function_decl_statement  goto 8
	function_call  goto 17
	statement_list  goto 46
	class_decl_statement  goto 10
	assignment  goto 7
	if_statement  goto 9
	for_statement  goto 11
	block  goto 5
	class_decl_member  goto 23
	class_decl_method  goto 24

state 15
	expr:  (.expr ) 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 47
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 16
	expr:  -.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 48
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 17
	expr:  function_call.    (64)

	.  reduce 64 (src line 420)


state 18
	assignment:  T_IDENTIFIER.= expr 
	function_decl_statement:  T_IDENTIFIER.T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH block 
	function_decl_statement:  T_IDENTIFIER.T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH statement 
	expr:  T_IDENTIFIER.    (65)
	function_call:  T_IDENTIFIER.( function_call_parameter_list ) 

	T_FUNCTION_PROTOTYPE  shift 50
	(  shift 51
	=  shift 49
	.  reduce 65 (src line 423)


state 19
	expr:  number.    (66)

	.  reduce 66 (src line 427)


state 20
	expr:  floating_number.    (67)

	.  reduce 67 (src line 430)


state 21
	if_statement:  T_IF.expr block T_NEWLINE 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 52
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 22
	class_decl_statement:  T_CLASS.T_IDENTIFIER class_decl_extends class_decl_does class_decl_block 

	T_IDENTIFIER  shift 53
	.  error


state 23
	class_decl_statement:  class_decl_member.    (45)

	.  reduce 45 (src line 342)


state 24
	class_decl_statement:  class_decl_method.    (46)

	.  reduce 46 (src line 344)


state 25
	for_statement:  T_FOR.T_IDENTIFIER T_IN listop 

	T_IDENTIFIER  shift 54
	.  error


state 26
	number:  T_NUMBER.    (69)

	.  reduce 69 (src line 439)


state 27
	floating_number:  T_FLOATING.    (68)

	.  reduce 68 (src line 435)


state 28
	class_decl_member:  @.T_IDENTIFIER = expr 

	T_IDENTIFIER  shift 55
	.  error


29: shift/reduce conflict (shift 13(0), red'n 5(0)) on T_NEWLINE
state 29
	statement_list:  statement_list T_NEWLINE.statement 
	statement_list:  statement_list T_NEWLINE.    (5)

	T_IDENTIFIER  shift 18
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	T_INDENT  shift 14
	T_NEWLINE  shift 13
	T_IF  shift 21
	T_FOR  shift 25
	T_CLASS  shift 22
	T_RETURN  shift 12
	(  shift 15
	-  shift 16
	@  shift 28
	.  reduce 5 (src line 171)

	expr  goto 6
	number  goto 19
	floating_number  goto 20
	statement  goto 56
	function_decl_statement  goto 8
	function_call  goto 17
	class_decl_statement  goto 10
	assignment  goto 7
	if_statement  goto 9
	for_statement  goto 11
	block  goto 5
	class_decl_member  goto 23
	class_decl_method  goto 24

state 30
	expr:  expr +.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 57
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 31
	expr:  expr -.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 58
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 32
	expr:  expr *.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 59
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 33
	expr:  expr /.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 60
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 34
	expr:  expr %.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 61
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 35
	expr:  expr &.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 62
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 36
	expr:  expr |.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 63
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 37
	expr:  expr >.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 64
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 38
	expr:  expr <.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 65
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 39
	expr:  expr T_EQUAL.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 66
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 40
	expr:  expr T_LT_EQUAL.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 67
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 41
	expr:  expr T_GT_EQUAL.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 68
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 42
	if_statement:  if_statement T_ELSEIF.expr block T_NEWLINE 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 69
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 43
	if_statement:  if_statement T_ELSE.block T_NEWLINE 

	T_INDENT  shift 14
	.  error

	block  goto 70

state 44
	statement:  T_RETURN expr.    (14)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 14 (src line 188)


state 45
	expr:  T_IDENTIFIER.    (65)
	function_call:  T_IDENTIFIER.( function_call_parameter_list ) 

	(  shift 51
	.  reduce 65 (src line 423)


state 46
	block:  T_INDENT statement_list.T_OUTDENT 
	statement_list:  statement_list.T_NEWLINE statement 
	statement_list:  statement_list.T_NEWLINE 

	T_OUTDENT  shift 71
	T_NEWLINE  shift 29
	.  error


state 47
	expr:  ( expr.) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	)  shift 72
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  error


48: shift/reduce conflict (shift 39(0), red'n 63(11)) on T_EQUAL
48: shift/reduce conflict (shift 40(0), red'n 63(11)) on T_LT_EQUAL
48: shift/reduce conflict (shift 41(0), red'n 63(11)) on T_GT_EQUAL
48: shift/reduce conflict (shift 37(0), red'n 63(11)) on >
48: shift/reduce conflict (shift 38(0), red'n 63(11)) on <
state 48
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	expr:  - expr.    (63)

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	>  shift 37
	<  shift 38
	.  reduce 63 (src line 416)


state 49
	assignment:  T_IDENTIFIER =.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 73
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 50
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE.function_parameter_list T_FUNCTION_GLYPH block 
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE.function_parameter_list T_FUNCTION_GLYPH statement 
	function_parameter_list: .    (30)

	(  shift 75
	.  reduce 30 (src line 263)

	function_parameter_list  goto 74

state 51
	function_call:  T_IDENTIFIER (.function_call_parameter_list ) 
	function_call_parameter_list: .    (73)

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  reduce 73 (src line 459)

	expr  goto 78
	number  goto 19
	floating_number  goto 20
	function_call_parameter  goto 77
	function_call_parameter_list  goto 76
	function_call  goto 17

state 52
	if_statement:  T_IF expr.block T_NEWLINE 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	T_INDENT  shift 14
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  error

	block  goto 79

state 53
	class_decl_statement:  T_CLASS T_IDENTIFIER.class_decl_extends class_decl_does class_decl_block 
	class_decl_extends: .    (37)

	T_EXTENDS  shift 81
	.  reduce 37 (src line 315)

	class_decl_extends  goto 80

state 54
	for_statement:  T_FOR T_IDENTIFIER.T_IN listop 

	T_IN  shift 82
	.  error


state 55
	class_decl_member:  @ T_IDENTIFIER.= expr 

	=  shift 83
	.  error


state 56
	statement_list:  statement_list T_NEWLINE statement.    (4)

	.  reduce 4 (src line 163)


57: shift/reduce conflict (shift 39(0), red'n 51(8)) on T_EQUAL
57: shift/reduce conflict (shift 40(0), red'n 51(8)) on T_LT_EQUAL
57: shift/reduce conflict (shift 41(0), red'n 51(8)) on T_GT_EQUAL
57: shift/reduce conflict (shift 37(0), red'n 51(8)) on >
57: shift/reduce conflict (shift 38(0), red'n 51(8)) on <
state 57
	expr:  expr.+ expr 
	expr:  expr + expr.    (51)
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 51 (src line 368)


58: shift/reduce conflict (shift 39(0), red'n 52(8)) on T_EQUAL
58: shift/reduce conflict (shift 40(0), red'n 52(8)) on T_LT_EQUAL
58: shift/reduce conflict (shift 41(0), red'n 52(8)) on T_GT_EQUAL
58: shift/reduce conflict (shift 37(0), red'n 52(8)) on >
58: shift/reduce conflict (shift 38(0), red'n 52(8)) on <
state 58
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr - expr.    (52)
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 52 (src line 372)


59: shift/reduce conflict (shift 39(0), red'n 53(9)) on T_EQUAL
59: shift/reduce conflict (shift 40(0), red'n 53(9)) on T_LT_EQUAL
59: shift/reduce conflict (shift 41(0), red'n 53(9)) on T_GT_EQUAL
59: shift/reduce conflict (shift 37(0), red'n 53(9)) on >
59: shift/reduce conflict (shift 38(0), red'n 53(9)) on <
state 59
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr * expr.    (53)
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	>  shift 37
	<  shift 38
	.  reduce 53 (src line 376)


60: shift/reduce conflict (shift 39(0), red'n 54(9)) on T_EQUAL
60: shift/reduce conflict (shift 40(0), red'n 54(9)) on T_LT_EQUAL
60: shift/reduce conflict (shift 41(0), red'n 54(9)) on T_GT_EQUAL
60: shift/reduce conflict (shift 37(0), red'n 54(9)) on >
60: shift/reduce conflict (shift 38(0), red'n 54(9)) on <
state 60
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr / expr.    (54)
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	>  shift 37
	<  shift 38
	.  reduce 54 (src line 380)


61: shift/reduce conflict (shift 39(0), red'n 55(9)) on T_EQUAL
61: shift/reduce conflict (shift 40(0), red'n 55(9)) on T_LT_EQUAL
61: shift/reduce conflict (shift 41(0), red'n 55(9)) on T_GT_EQUAL
61: shift/reduce conflict (shift 37(0), red'n 55(9)) on >
61: shift/reduce conflict (shift 38(0), red'n 55(9)) on <
state 61
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr % expr.    (55)
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	>  shift 37
	<  shift 38
	.  reduce 55 (src line 384)


62: shift/reduce conflict (shift 39(0), red'n 56(7)) on T_EQUAL
62: shift/reduce conflict (shift 40(0), red'n 56(7)) on T_LT_EQUAL
62: shift/reduce conflict (shift 41(0), red'n 56(7)) on T_GT_EQUAL
62: shift/reduce conflict (shift 37(0), red'n 56(7)) on >
62: shift/reduce conflict (shift 38(0), red'n 56(7)) on <
state 62
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr & expr.    (56)
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 56 (src line 388)


63: shift/reduce conflict (shift 39(0), red'n 57(5)) on T_EQUAL
63: shift/reduce conflict (shift 40(0), red'n 57(5)) on T_LT_EQUAL
63: shift/reduce conflict (shift 41(0), red'n 57(5)) on T_GT_EQUAL
63: shift/reduce conflict (shift 37(0), red'n 57(5)) on >
63: shift/reduce conflict (shift 38(0), red'n 57(5)) on <
state 63
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr | expr.    (57)
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 57 (src line 392)


64: shift/reduce conflict (shift 39(0), red'n 58(0)) on T_EQUAL
64: shift/reduce conflict (shift 40(0), red'n 58(0)) on T_LT_EQUAL
64: shift/reduce conflict (shift 41(0), red'n 58(0)) on T_GT_EQUAL
64: shift/reduce conflict (shift 36(5), red'n 58(0)) on |
64: shift/reduce conflict (shift 35(7), red'n 58(0)) on &
64: shift/reduce conflict (shift 30(8), red'n 58(0)) on +
64: shift/reduce conflict (shift 31(8), red'n 58(0)) on -
64: shift/reduce conflict (shift 32(9), red'n 58(0)) on *
64: shift/reduce conflict (shift 33(9), red'n 58(0)) on /
64: shift/reduce conflict (shift 34(9), red'n 58(0)) on %
64: shift/reduce conflict (shift 37(0), red'n 58(0)) on >
64: shift/reduce conflict (shift 38(0), red'n 58(0)) on <
state 64
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr > expr.    (58)
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 58 (src line 396)


65: shift/reduce conflict (shift 39(0), red'n 59(0)) on T_EQUAL
65: shift/reduce conflict (shift 40(0), red'n 59(0)) on T_LT_EQUAL
65: shift/reduce conflict (shift 41(0), red'n 59(0)) on T_GT_EQUAL
65: shift/reduce conflict (shift 36(5), red'n 59(0)) on |
65: shift/reduce conflict (shift 35(7), red'n 59(0)) on &
65: shift/reduce conflict (shift 30(8), red'n 59(0)) on +
65: shift/reduce conflict (shift 31(8), red'n 59(0)) on -
65: shift/reduce conflict (shift 32(9), red'n 59(0)) on *
65: shift/reduce conflict (shift 33(9), red'n 59(0)) on /
65: shift/reduce conflict (shift 34(9), red'n 59(0)) on %
65: shift/reduce conflict (shift 37(0), red'n 59(0)) on >
65: shift/reduce conflict (shift 38(0), red'n 59(0)) on <
state 65
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr < expr.    (59)
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 59 (src line 400)


66: shift/reduce conflict (shift 39(0), red'n 60(0)) on T_EQUAL
66: shift/reduce conflict (shift 40(0), red'n 60(0)) on T_LT_EQUAL
66: shift/reduce conflict (shift 41(0), red'n 60(0)) on T_GT_EQUAL
66: shift/reduce conflict (shift 36(5), red'n 60(0)) on |
66: shift/reduce conflict (shift 35(7), red'n 60(0)) on &
66: shift/reduce conflict (shift 30(8), red'n 60(0)) on +
66: shift/reduce conflict (shift 31(8), red'n 60(0)) on -
66: shift/reduce conflict (shift 32(9), red'n 60(0)) on *
66: shift/reduce conflict (shift 33(9), red'n 60(0)) on /
66: shift/reduce conflict (shift 34(9), red'n 60(0)) on %
66: shift/reduce conflict (shift 37(0), red'n 60(0)) on >
66: shift/reduce conflict (shift 38(0), red'n 60(0)) on <
state 66
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr T_EQUAL expr.    (60)
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 60 (src line 404)


67: shift/reduce conflict (shift 39(0), red'n 61(0)) on T_EQUAL
67: shift/reduce conflict (shift 40(0), red'n 61(0)) on T_LT_EQUAL
67: shift/reduce conflict (shift 41(0), red'n 61(0)) on T_GT_EQUAL
67: shift/reduce conflict (shift 36(5), red'n 61(0)) on |
67: shift/reduce conflict (shift 35(7), red'n 61(0)) on &
67: shift/reduce conflict (shift 30(8), red'n 61(0)) on +
67: shift/reduce conflict (shift 31(8), red'n 61(0)) on -
67: shift/reduce conflict (shift 32(9), red'n 61(0)) on *
67: shift/reduce conflict (shift 33(9), red'n 61(0)) on /
67: shift/reduce conflict (shift 34(9), red'n 61(0)) on %
67: shift/reduce conflict (shift 37(0), red'n 61(0)) on >
67: shift/reduce conflict (shift 38(0), red'n 61(0)) on <
state 67
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr T_LT_EQUAL expr.    (61)
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 61 (src line 408)


68: shift/reduce conflict (shift 39(0), red'n 62(0)) on T_EQUAL
68: shift/reduce conflict (shift 40(0), red'n 62(0)) on T_LT_EQUAL
68: shift/reduce conflict (shift 41(0), red'n 62(0)) on T_GT_EQUAL
68: shift/reduce conflict (shift 36(5), red'n 62(0)) on |
68: shift/reduce conflict (shift 35(7), red'n 62(0)) on &
68: shift/reduce conflict (shift 30(8), red'n 62(0)) on +
68: shift/reduce conflict (shift 31(8), red'n 62(0)) on -
68: shift/reduce conflict (shift 32(9), red'n 62(0)) on *
68: shift/reduce conflict (shift 33(9), red'n 62(0)) on /
68: shift/reduce conflict (shift 34(9), red'n 62(0)) on %
68: shift/reduce conflict (shift 37(0), red'n 62(0)) on >
68: shift/reduce conflict (shift 38(0), red'n 62(0)) on <
state 68
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	expr:  expr T_GT_EQUAL expr.    (62)

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 62 (src line 412)


state 69
	if_statement:  if_statement T_ELSEIF expr.block T_NEWLINE 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	T_INDENT  shift 14
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  error

	block  goto 84

state 70
	if_statement:  if_statement T_ELSE block.T_NEWLINE 

	T_NEWLINE  shift 85
	.  error


state 71
	block:  T_INDENT statement_list T_OUTDENT.    (3)

	.  reduce 3 (src line 161)


state 72
	expr:  ( expr ).    (50)

	.  reduce 50 (src line 358)


state 73
	assignment:  T_IDENTIFIER = expr.    (22)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 22 (src line 221)


state 74
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list.T_FUNCTION_GLYPH block 
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list.T_FUNCTION_GLYPH statement 

	T_FUNCTION_GLYPH  shift 86
	.  error


state 75
	function_parameter_list:  (.function_parameters ) 
	function_parameter_list:  (.) 

	T_IDENTIFIER  shift 90
	)  shift 88
	.  error

	function_parameters  goto 87
	function_parameter  goto 89

state 76
	function_call_parameter_list:  function_call_parameter_list., function_call_parameter 
	function_call:  T_IDENTIFIER ( function_call_parameter_list.) 

	)  shift 92
	,  shift 91
	.  error


state 77
	function_call_parameter_list:  function_call_parameter.    (72)

	.  reduce 72 (src line 454)


state 78
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	function_call_parameter:  expr.    (70)

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 70 (src line 443)


state 79
	if_statement:  T_IF expr block.T_NEWLINE 

	T_NEWLINE  shift 93
	.  error


state 80
	class_decl_statement:  T_CLASS T_IDENTIFIER class_decl_extends.class_decl_does class_decl_block 
	class_decl_does: .    (39)

	T_DOES  shift 95
	.  reduce 39 (src line 320)

	class_decl_does  goto 94

state 81
	class_decl_extends:  T_EXTENDS.T_IDENTIFIER 

	T_IDENTIFIER  shift 96
	.  error


state 82
	for_statement:  T_FOR T_IDENTIFIER T_IN.listop 

	[  shift 98
	.  error

	listop  goto 97

state 83
	class_decl_member:  @ T_IDENTIFIER =.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 99
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 84
	if_statement:  if_statement T_ELSEIF expr block.T_NEWLINE 

	T_NEWLINE  shift 100
	.  error


state 85
	if_statement:  if_statement T_ELSE block T_NEWLINE.    (21)

	.  reduce 21 (src line 213)


state 86
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH.block 
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH.statement 

	T_IDENTIFIER  shift 18
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	T_INDENT  shift 14
	T_NEWLINE  shift 13
	T_IF  shift 21
	T_FOR  shift 25
	T_CLASS  shift 22
	T_RETURN  shift 12
	(  shift 15
	-  shift 16
	@  shift 28
	.  error

	expr  goto 6
	number  goto 19
	floating_number  goto 20
	statement  goto 102
	function_decl_statement  goto 8
	function_call  goto 17
	class_decl_statement  goto 10
	assignment  goto 7
	if_statement  goto 9
	for_statement  goto 11
	block  goto 101
	class_decl_member  goto 23
	class_decl_method  goto 24

state 87
	function_parameters:  function_parameters., function_parameter 
	function_parameter_list:  ( function_parameters.) 

	)  shift 104
	,  shift 103
	.  error


state 88
	function_parameter_list:  ( ).    (29)

	.  reduce 29 (src line 260)


state 89
	function_parameters:  function_parameter.    (27)

	.  reduce 27 (src line 251)


state 90
	function_parameter:  T_IDENTIFIER.= expr 
	function_parameter:  T_IDENTIFIER.T_IDENTIFIER 
	function_parameter:  T_IDENTIFIER.    (25)

	T_IDENTIFIER  shift 106
	=  shift 105
	.  reduce 25 (src line 238)


state 91
	function_call_parameter_list:  function_call_parameter_list ,.function_call_parameter 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 78
	number  goto 19
	floating_number  goto 20
	function_call_parameter  goto 107
	function_call  goto 17

state 92
	function_call:  T_IDENTIFIER ( function_call_parameter_list ).    (74)

	.  reduce 74 (src line 465)


state 93
	if_statement:  T_IF expr block T_NEWLINE.    (19)

	.  reduce 19 (src line 202)


state 94
	class_decl_statement:  T_CLASS T_IDENTIFIER class_decl_extends class_decl_does.class_decl_block 
	class_decl_block: .    (35)

	T_INDENT  shift 109
	.  reduce 35 (src line 310)

	class_decl_block  goto 108

state 95
	class_decl_does:  T_DOES.class_decl_does_list 

	T_IDENTIFIER  shift 111
	.  error

	class_decl_does_list  goto 110

state 96
	class_decl_extends:  T_EXTENDS T_IDENTIFIER.    (36)

	.  reduce 36 (src line 313)


state 97
	for_statement:  T_FOR T_IDENTIFIER T_IN listop.    (18)

	.  reduce 18 (src line 197)


state 98
	listop:  [.] 
	listop:  [.range ] 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	]  shift 112
	.  error

	expr  goto 114
	number  goto 19
	floating_number  goto 20
	function_call  goto 17
	range  goto 113

state 99
	class_decl_member:  @ T_IDENTIFIER = expr.    (47)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 47 (src line 347)


state 100
	if_statement:  if_statement T_ELSEIF expr block T_NEWLINE.    (20)

	.  reduce 20 (src line 207)


 101: reduce/reduce conflict  (red'ns 7 and 31) on $end
 101: reduce/reduce conflict  (red'ns 7 and 31) on T_OUTDENT
 101: reduce/reduce conflict  (red'ns 7 and 31) on T_NEWLINE
state 101
	statement:  block.    (7)
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH block.    (31)

	.  reduce 7 (src line 180)


state 102
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH statement.    (32)

	.  reduce 32 (src line 275)


state 103
	function_parameters:  function_parameters ,.function_parameter 

	T_IDENTIFIER  shift 90
	.  error

	function_parameter  goto 115

state 104
	function_parameter_list:  ( function_parameters ).    (28)

	.  reduce 28 (src line 256)


state 105
	function_parameter:  T_IDENTIFIER =.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 116
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 106
	function_parameter:  T_IDENTIFIER T_IDENTIFIER.    (24)

	.  reduce 24 (src line 234)


state 107
	function_call_parameter_list:  function_call_parameter_list , function_call_parameter.    (71)

	.  reduce 71 (src line 447)


state 108
	class_decl_statement:  T_CLASS T_IDENTIFIER class_decl_extends class_decl_does class_decl_block.    (33)

	.  reduce 33 (src line 283)


state 109
	class_decl_block:  T_INDENT.statement_list T_OUTDENT T_NEWLINE 

	T_IDENTIFIER  shift 18
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	T_INDENT  shift 14
	T_NEWLINE  shift 13
	T_IF  shift 21
	T_FOR  shift 25
	T_CLASS  shift 22
	T_RETURN  shift 12
	(  shift 15
	-  shift 16
	@  shift 28
	.  error

	expr  goto 6
	number  goto 19
	floating_number  goto 20
	statement  goto 4
	function_decl_statement  goto 8
	function_call  goto 17
	statement_list  goto 117
	class_decl_statement  goto 10
	assignment  goto 7
	if_statement  goto 9
	for_statement  goto 11
	block  goto 5
	class_decl_member  goto 23
	class_decl_method  goto 24

state 110
	class_decl_does:  T_DOES class_decl_does_list.    (38)
	class_decl_does_list:  class_decl_does_list., T_IDENTIFIER 

	,  shift 118
	.  reduce 38 (src line 318)


state 111
	class_decl_does_list:  T_IDENTIFIER.    (41)

	.  reduce 41 (src line 330)


state 112
	listop:  [ ].    (16)

	.  reduce 16 (src line 192)


state 113
	listop:  [ range.] 

	]  shift 119
	.  error


state 114
	range:  expr.T_RANGE_OPERATOR expr 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	T_RANGE_OPERATOR  shift 120
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  error


state 115
	function_parameters:  function_parameters , function_parameter.    (26)

	.  reduce 26 (src line 244)


state 116
	function_parameter:  T_IDENTIFIER = expr.    (23)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 23 (src line 230)


state 117
	statement_list:  statement_list.T_NEWLINE statement 
	statement_list:  statement_list.T_NEWLINE 
	class_decl_block:  T_INDENT statement_list.T_OUTDENT T_NEWLINE 

	T_OUTDENT  shift 121
	T_NEWLINE  shift 29
	.  error


state 118
	class_decl_does_list:  class_decl_does_list ,.T_IDENTIFIER 

	T_IDENTIFIER  shift 122
	.  error


state 119
	listop:  [ range ].    (17)

	.  reduce 17 (src line 194)


state 120
	range:  expr T_RANGE_OPERATOR.expr 

	T_IDENTIFIER  shift 45
	T_FLOATING  shift 27
	T_NUMBER  shift 26
	(  shift 15
	-  shift 16
	.  error

	expr  goto 123
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 121
	class_decl_block:  T_INDENT statement_list T_OUTDENT.T_NEWLINE 

	T_NEWLINE  shift 124
	.  error


state 122
	class_decl_does_list:  class_decl_does_list , T_IDENTIFIER.    (40)

	.  reduce 40 (src line 323)


state 123
	range:  expr T_RANGE_OPERATOR expr.    (49)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 39
	T_LT_EQUAL  shift 40
	T_GT_EQUAL  shift 41
	|  shift 36
	&  shift 35
	+  shift 30
	-  shift 31
	*  shift 32
	/  shift 33
	%  shift 34
	>  shift 37
	<  shift 38
	.  reduce 49 (src line 356)


state 124
	class_decl_block:  T_INDENT statement_list T_OUTDENT T_NEWLINE.    (34)

	.  reduce 34 (src line 305)

Rule not reduced: function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH block 
Rule not reduced: class_decl_statement_list:  class_decl_statement_list T_NEWLINE class_decl_statement_list 
Rule not reduced: class_decl_statement_list:  class_decl_statement_list T_NEWLINE 
Rule not reduced: class_decl_statement_list:  class_decl_statement 
Rule not reduced: class_decl_method:  function_decl_statement 

68 terminals, 29 nonterminals
75 grammar rules, 125/2000 states
101 shift/reduce, 6 reduce/reduce conflicts reported
78 working sets used
memory: parser 212/30000
61 extra closures
475 shift entries, 1 exceptions
62 goto entries
120 entries saved by goto default
Optimizer space used: output 241/30000
241 table entries, 31 zero
maximum spread: 68, maximum offset: 120
