
state 0
	$accept: .start $end 

	T_IDENTIFIER  shift 18
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	T_INDENT  shift 14
	T_NEWLINE  shift 5
	T_IF  shift 21
	T_FOR  shift 23
	T_CLASS  shift 22
	T_RETURN  shift 13
	(  shift 15
	-  shift 16
	.  error

	expr  goto 7
	number  goto 19
	floating_number  goto 20
	statement  goto 4
	function_decl_statement  goto 9
	function_call  goto 17
	statement_list  goto 3
	class_decl_statement  goto 11
	assignment  goto 8
	if_statement  goto 10
	for_statement  goto 12
	block  goto 6
	top_statement_list  goto 2
	start  goto 1

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  top_statement_list.    (1)

	.  reduce 1 (src line 147)


state 3
	top_statement_list:  statement_list.    (2)
	statement_list:  statement_list.T_NEWLINE statement 

	T_NEWLINE  shift 26
	.  reduce 2 (src line 153)


state 4
	statement_list:  statement.    (5)

	.  reduce 5 (src line 170)


state 5
	statement_list:  T_NEWLINE.    (6)

	.  reduce 6 (src line 176)


state 6
	statement:  block.    (7)

	.  reduce 7 (src line 179)


state 7
	statement:  expr.    (8)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 8 (src line 181)


state 8
	statement:  assignment.    (9)

	.  reduce 9 (src line 182)


state 9
	statement:  function_decl_statement.    (10)

	.  reduce 10 (src line 183)


10: shift/reduce conflict (shift 39(0), red'n 11(0)) on T_NEWLINE
state 10
	statement:  if_statement.    (11)
	if_statement:  if_statement.T_NEWLINE T_ELSEIF expr block 
	if_statement:  if_statement.T_NEWLINE T_ELSE block 

	T_NEWLINE  shift 39
	.  reduce 11 (src line 184)


state 11
	statement:  class_decl_statement.    (12)

	.  reduce 12 (src line 185)


state 12
	statement:  for_statement.    (13)

	.  reduce 13 (src line 186)


state 13
	statement:  T_RETURN.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 40
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 14
	block:  T_INDENT.statement_list T_OUTDENT 

	T_IDENTIFIER  shift 18
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	T_INDENT  shift 14
	T_NEWLINE  shift 5
	T_IF  shift 21
	T_FOR  shift 23
	T_CLASS  shift 22
	T_RETURN  shift 13
	(  shift 15
	-  shift 16
	.  error

	expr  goto 7
	number  goto 19
	floating_number  goto 20
	statement  goto 4
	function_decl_statement  goto 9
	function_call  goto 17
	statement_list  goto 42
	class_decl_statement  goto 11
	assignment  goto 8
	if_statement  goto 10
	for_statement  goto 12
	block  goto 6

state 15
	expr:  (.expr ) 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 43
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 16
	expr:  -.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 44
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 17
	expr:  function_call.    (53)

	.  reduce 53 (src line 371)


state 18
	assignment:  T_IDENTIFIER.= expr 
	function_decl_statement:  T_IDENTIFIER.T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH block 
	expr:  T_IDENTIFIER.    (54)
	function_call:  T_IDENTIFIER.( function_call_parameter_list ) 

	T_FUNCTION_PROTOTYPE  shift 46
	(  shift 47
	=  shift 45
	.  reduce 54 (src line 374)


state 19
	expr:  number.    (55)

	.  reduce 55 (src line 378)


state 20
	expr:  floating_number.    (56)

	.  reduce 56 (src line 381)


state 21
	if_statement:  T_IF.expr block 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 48
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 22
	class_decl_statement:  T_CLASS.T_IDENTIFIER 

	T_IDENTIFIER  shift 49
	.  error


state 23
	for_statement:  T_FOR.T_IDENTIFIER T_IN listop 

	T_IDENTIFIER  shift 50
	.  error


state 24
	number:  T_NUMBER.    (58)

	.  reduce 58 (src line 390)


state 25
	floating_number:  T_FLOATING.    (57)

	.  reduce 57 (src line 386)


state 26
	statement_list:  statement_list T_NEWLINE.statement 

	T_IDENTIFIER  shift 18
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	T_INDENT  shift 14
	T_IF  shift 21
	T_FOR  shift 23
	T_CLASS  shift 22
	T_RETURN  shift 13
	(  shift 15
	-  shift 16
	.  error

	expr  goto 7
	number  goto 19
	floating_number  goto 20
	statement  goto 51
	function_decl_statement  goto 9
	function_call  goto 17
	class_decl_statement  goto 11
	assignment  goto 8
	if_statement  goto 10
	for_statement  goto 12
	block  goto 6

state 27
	expr:  expr +.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 52
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 28
	expr:  expr -.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 53
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 29
	expr:  expr *.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 54
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 30
	expr:  expr /.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 55
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 31
	expr:  expr %.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 56
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 32
	expr:  expr &.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 57
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 33
	expr:  expr |.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 58
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 34
	expr:  expr >.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 59
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 35
	expr:  expr <.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 60
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 36
	expr:  expr T_EQUAL.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 61
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 37
	expr:  expr T_LT_EQUAL.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 62
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 38
	expr:  expr T_GT_EQUAL.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 63
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 39
	if_statement:  if_statement T_NEWLINE.T_ELSEIF expr block 
	if_statement:  if_statement T_NEWLINE.T_ELSE block 

	T_ELSEIF  shift 64
	T_ELSE  shift 65
	.  error


state 40
	statement:  T_RETURN expr.    (14)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 14 (src line 187)


state 41
	expr:  T_IDENTIFIER.    (54)
	function_call:  T_IDENTIFIER.( function_call_parameter_list ) 

	(  shift 47
	.  reduce 54 (src line 374)


state 42
	block:  T_INDENT statement_list.T_OUTDENT 
	statement_list:  statement_list.T_NEWLINE statement 

	T_OUTDENT  shift 66
	T_NEWLINE  shift 26
	.  error


state 43
	expr:  ( expr.) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	)  shift 67
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  error


44: shift/reduce conflict (shift 36(0), red'n 52(11)) on T_EQUAL
44: shift/reduce conflict (shift 37(0), red'n 52(11)) on T_LT_EQUAL
44: shift/reduce conflict (shift 38(0), red'n 52(11)) on T_GT_EQUAL
44: shift/reduce conflict (shift 34(0), red'n 52(11)) on >
44: shift/reduce conflict (shift 35(0), red'n 52(11)) on <
state 44
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	expr:  - expr.    (52)

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	>  shift 34
	<  shift 35
	.  reduce 52 (src line 367)


state 45
	assignment:  T_IDENTIFIER =.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 68
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 46
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE.function_parameter_list T_FUNCTION_GLYPH block 
	function_parameter_list: .    (29)

	(  shift 70
	.  reduce 29 (src line 261)

	function_parameter_list  goto 69

state 47
	function_call:  T_IDENTIFIER (.function_call_parameter_list ) 
	function_call_parameter_list: .    (62)

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  reduce 62 (src line 410)

	expr  goto 73
	number  goto 19
	floating_number  goto 20
	function_call_parameter  goto 72
	function_call_parameter_list  goto 71
	function_call  goto 17

state 48
	if_statement:  T_IF expr.block 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	T_INDENT  shift 14
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  error

	block  goto 74

state 49
	class_decl_statement:  T_CLASS T_IDENTIFIER.    (31)

	.  reduce 31 (src line 273)


state 50
	for_statement:  T_FOR T_IDENTIFIER.T_IN listop 

	T_IN  shift 75
	.  error


state 51
	statement_list:  statement_list T_NEWLINE statement.    (4)

	.  reduce 4 (src line 162)


52: shift/reduce conflict (shift 36(0), red'n 40(8)) on T_EQUAL
52: shift/reduce conflict (shift 37(0), red'n 40(8)) on T_LT_EQUAL
52: shift/reduce conflict (shift 38(0), red'n 40(8)) on T_GT_EQUAL
52: shift/reduce conflict (shift 34(0), red'n 40(8)) on >
52: shift/reduce conflict (shift 35(0), red'n 40(8)) on <
state 52
	expr:  expr.+ expr 
	expr:  expr + expr.    (40)
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 40 (src line 319)


53: shift/reduce conflict (shift 36(0), red'n 41(8)) on T_EQUAL
53: shift/reduce conflict (shift 37(0), red'n 41(8)) on T_LT_EQUAL
53: shift/reduce conflict (shift 38(0), red'n 41(8)) on T_GT_EQUAL
53: shift/reduce conflict (shift 34(0), red'n 41(8)) on >
53: shift/reduce conflict (shift 35(0), red'n 41(8)) on <
state 53
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr - expr.    (41)
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 41 (src line 323)


54: shift/reduce conflict (shift 36(0), red'n 42(9)) on T_EQUAL
54: shift/reduce conflict (shift 37(0), red'n 42(9)) on T_LT_EQUAL
54: shift/reduce conflict (shift 38(0), red'n 42(9)) on T_GT_EQUAL
54: shift/reduce conflict (shift 34(0), red'n 42(9)) on >
54: shift/reduce conflict (shift 35(0), red'n 42(9)) on <
state 54
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr * expr.    (42)
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	>  shift 34
	<  shift 35
	.  reduce 42 (src line 327)


55: shift/reduce conflict (shift 36(0), red'n 43(9)) on T_EQUAL
55: shift/reduce conflict (shift 37(0), red'n 43(9)) on T_LT_EQUAL
55: shift/reduce conflict (shift 38(0), red'n 43(9)) on T_GT_EQUAL
55: shift/reduce conflict (shift 34(0), red'n 43(9)) on >
55: shift/reduce conflict (shift 35(0), red'n 43(9)) on <
state 55
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr / expr.    (43)
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	>  shift 34
	<  shift 35
	.  reduce 43 (src line 331)


56: shift/reduce conflict (shift 36(0), red'n 44(9)) on T_EQUAL
56: shift/reduce conflict (shift 37(0), red'n 44(9)) on T_LT_EQUAL
56: shift/reduce conflict (shift 38(0), red'n 44(9)) on T_GT_EQUAL
56: shift/reduce conflict (shift 34(0), red'n 44(9)) on >
56: shift/reduce conflict (shift 35(0), red'n 44(9)) on <
state 56
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr % expr.    (44)
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	>  shift 34
	<  shift 35
	.  reduce 44 (src line 335)


57: shift/reduce conflict (shift 36(0), red'n 45(7)) on T_EQUAL
57: shift/reduce conflict (shift 37(0), red'n 45(7)) on T_LT_EQUAL
57: shift/reduce conflict (shift 38(0), red'n 45(7)) on T_GT_EQUAL
57: shift/reduce conflict (shift 34(0), red'n 45(7)) on >
57: shift/reduce conflict (shift 35(0), red'n 45(7)) on <
state 57
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr & expr.    (45)
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 45 (src line 339)


58: shift/reduce conflict (shift 36(0), red'n 46(5)) on T_EQUAL
58: shift/reduce conflict (shift 37(0), red'n 46(5)) on T_LT_EQUAL
58: shift/reduce conflict (shift 38(0), red'n 46(5)) on T_GT_EQUAL
58: shift/reduce conflict (shift 34(0), red'n 46(5)) on >
58: shift/reduce conflict (shift 35(0), red'n 46(5)) on <
state 58
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr | expr.    (46)
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 46 (src line 343)


59: shift/reduce conflict (shift 36(0), red'n 47(0)) on T_EQUAL
59: shift/reduce conflict (shift 37(0), red'n 47(0)) on T_LT_EQUAL
59: shift/reduce conflict (shift 38(0), red'n 47(0)) on T_GT_EQUAL
59: shift/reduce conflict (shift 33(5), red'n 47(0)) on |
59: shift/reduce conflict (shift 32(7), red'n 47(0)) on &
59: shift/reduce conflict (shift 27(8), red'n 47(0)) on +
59: shift/reduce conflict (shift 28(8), red'n 47(0)) on -
59: shift/reduce conflict (shift 29(9), red'n 47(0)) on *
59: shift/reduce conflict (shift 30(9), red'n 47(0)) on /
59: shift/reduce conflict (shift 31(9), red'n 47(0)) on %
59: shift/reduce conflict (shift 34(0), red'n 47(0)) on >
59: shift/reduce conflict (shift 35(0), red'n 47(0)) on <
state 59
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr > expr.    (47)
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 47 (src line 347)


60: shift/reduce conflict (shift 36(0), red'n 48(0)) on T_EQUAL
60: shift/reduce conflict (shift 37(0), red'n 48(0)) on T_LT_EQUAL
60: shift/reduce conflict (shift 38(0), red'n 48(0)) on T_GT_EQUAL
60: shift/reduce conflict (shift 33(5), red'n 48(0)) on |
60: shift/reduce conflict (shift 32(7), red'n 48(0)) on &
60: shift/reduce conflict (shift 27(8), red'n 48(0)) on +
60: shift/reduce conflict (shift 28(8), red'n 48(0)) on -
60: shift/reduce conflict (shift 29(9), red'n 48(0)) on *
60: shift/reduce conflict (shift 30(9), red'n 48(0)) on /
60: shift/reduce conflict (shift 31(9), red'n 48(0)) on %
60: shift/reduce conflict (shift 34(0), red'n 48(0)) on >
60: shift/reduce conflict (shift 35(0), red'n 48(0)) on <
state 60
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr < expr.    (48)
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 48 (src line 351)


61: shift/reduce conflict (shift 36(0), red'n 49(0)) on T_EQUAL
61: shift/reduce conflict (shift 37(0), red'n 49(0)) on T_LT_EQUAL
61: shift/reduce conflict (shift 38(0), red'n 49(0)) on T_GT_EQUAL
61: shift/reduce conflict (shift 33(5), red'n 49(0)) on |
61: shift/reduce conflict (shift 32(7), red'n 49(0)) on &
61: shift/reduce conflict (shift 27(8), red'n 49(0)) on +
61: shift/reduce conflict (shift 28(8), red'n 49(0)) on -
61: shift/reduce conflict (shift 29(9), red'n 49(0)) on *
61: shift/reduce conflict (shift 30(9), red'n 49(0)) on /
61: shift/reduce conflict (shift 31(9), red'n 49(0)) on %
61: shift/reduce conflict (shift 34(0), red'n 49(0)) on >
61: shift/reduce conflict (shift 35(0), red'n 49(0)) on <
state 61
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr T_EQUAL expr.    (49)
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 49 (src line 355)


62: shift/reduce conflict (shift 36(0), red'n 50(0)) on T_EQUAL
62: shift/reduce conflict (shift 37(0), red'n 50(0)) on T_LT_EQUAL
62: shift/reduce conflict (shift 38(0), red'n 50(0)) on T_GT_EQUAL
62: shift/reduce conflict (shift 33(5), red'n 50(0)) on |
62: shift/reduce conflict (shift 32(7), red'n 50(0)) on &
62: shift/reduce conflict (shift 27(8), red'n 50(0)) on +
62: shift/reduce conflict (shift 28(8), red'n 50(0)) on -
62: shift/reduce conflict (shift 29(9), red'n 50(0)) on *
62: shift/reduce conflict (shift 30(9), red'n 50(0)) on /
62: shift/reduce conflict (shift 31(9), red'n 50(0)) on %
62: shift/reduce conflict (shift 34(0), red'n 50(0)) on >
62: shift/reduce conflict (shift 35(0), red'n 50(0)) on <
state 62
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr T_LT_EQUAL expr.    (50)
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 50 (src line 359)


63: shift/reduce conflict (shift 36(0), red'n 51(0)) on T_EQUAL
63: shift/reduce conflict (shift 37(0), red'n 51(0)) on T_LT_EQUAL
63: shift/reduce conflict (shift 38(0), red'n 51(0)) on T_GT_EQUAL
63: shift/reduce conflict (shift 33(5), red'n 51(0)) on |
63: shift/reduce conflict (shift 32(7), red'n 51(0)) on &
63: shift/reduce conflict (shift 27(8), red'n 51(0)) on +
63: shift/reduce conflict (shift 28(8), red'n 51(0)) on -
63: shift/reduce conflict (shift 29(9), red'n 51(0)) on *
63: shift/reduce conflict (shift 30(9), red'n 51(0)) on /
63: shift/reduce conflict (shift 31(9), red'n 51(0)) on %
63: shift/reduce conflict (shift 34(0), red'n 51(0)) on >
63: shift/reduce conflict (shift 35(0), red'n 51(0)) on <
state 63
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	expr:  expr T_GT_EQUAL expr.    (51)

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 51 (src line 363)


state 64
	if_statement:  if_statement T_NEWLINE T_ELSEIF.expr block 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 76
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 65
	if_statement:  if_statement T_NEWLINE T_ELSE.block 

	T_INDENT  shift 14
	.  error

	block  goto 77

state 66
	block:  T_INDENT statement_list T_OUTDENT.    (3)

	.  reduce 3 (src line 160)


state 67
	expr:  ( expr ).    (39)

	.  reduce 39 (src line 309)


state 68
	assignment:  T_IDENTIFIER = expr.    (21)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 21 (src line 219)


state 69
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list.T_FUNCTION_GLYPH block 

	T_FUNCTION_GLYPH  shift 78
	.  error


state 70
	function_parameter_list:  (.function_parameters ) 
	function_parameter_list:  (.) 

	T_IDENTIFIER  shift 82
	)  shift 80
	.  error

	function_parameters  goto 79
	function_parameter  goto 81

state 71
	function_call_parameter_list:  function_call_parameter_list., function_call_parameter 
	function_call:  T_IDENTIFIER ( function_call_parameter_list.) 

	)  shift 84
	,  shift 83
	.  error


state 72
	function_call_parameter_list:  function_call_parameter.    (61)

	.  reduce 61 (src line 405)


state 73
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	function_call_parameter:  expr.    (59)

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 59 (src line 394)


state 74
	if_statement:  T_IF expr block.    (18)

	.  reduce 18 (src line 200)


state 75
	for_statement:  T_FOR T_IDENTIFIER T_IN.listop 

	[  shift 86
	.  error

	listop  goto 85

state 76
	if_statement:  if_statement T_NEWLINE T_ELSEIF expr.block 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	T_INDENT  shift 14
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  error

	block  goto 87

state 77
	if_statement:  if_statement T_NEWLINE T_ELSE block.    (20)

	.  reduce 20 (src line 211)


state 78
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH.block 

	T_INDENT  shift 14
	.  error

	block  goto 88

state 79
	function_parameters:  function_parameters., function_parameter 
	function_parameter_list:  ( function_parameters.) 

	)  shift 90
	,  shift 89
	.  error


state 80
	function_parameter_list:  ( ).    (28)

	.  reduce 28 (src line 258)


state 81
	function_parameters:  function_parameter.    (26)

	.  reduce 26 (src line 249)


state 82
	function_parameter:  T_IDENTIFIER.= expr 
	function_parameter:  T_IDENTIFIER.T_IDENTIFIER 
	function_parameter:  T_IDENTIFIER.    (24)

	T_IDENTIFIER  shift 92
	=  shift 91
	.  reduce 24 (src line 236)


state 83
	function_call_parameter_list:  function_call_parameter_list ,.function_call_parameter 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 73
	number  goto 19
	floating_number  goto 20
	function_call_parameter  goto 93
	function_call  goto 17

state 84
	function_call:  T_IDENTIFIER ( function_call_parameter_list ).    (63)

	.  reduce 63 (src line 416)


state 85
	for_statement:  T_FOR T_IDENTIFIER T_IN listop.    (17)

	.  reduce 17 (src line 195)


state 86
	listop:  [.] 
	listop:  [.range ] 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	]  shift 94
	.  error

	expr  goto 96
	number  goto 19
	floating_number  goto 20
	function_call  goto 17
	range  goto 95

state 87
	if_statement:  if_statement T_NEWLINE T_ELSEIF expr block.    (19)

	.  reduce 19 (src line 205)


state 88
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH block.    (30)

	.  reduce 30 (src line 266)


state 89
	function_parameters:  function_parameters ,.function_parameter 

	T_IDENTIFIER  shift 82
	.  error

	function_parameter  goto 97

state 90
	function_parameter_list:  ( function_parameters ).    (27)

	.  reduce 27 (src line 254)


state 91
	function_parameter:  T_IDENTIFIER =.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 98
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 92
	function_parameter:  T_IDENTIFIER T_IDENTIFIER.    (23)

	.  reduce 23 (src line 232)


state 93
	function_call_parameter_list:  function_call_parameter_list , function_call_parameter.    (60)

	.  reduce 60 (src line 398)


state 94
	listop:  [ ].    (15)

	.  reduce 15 (src line 190)


state 95
	listop:  [ range.] 

	]  shift 99
	.  error


state 96
	range:  expr.T_RANGE_OPERATOR expr 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	T_RANGE_OPERATOR  shift 100
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  error


state 97
	function_parameters:  function_parameters , function_parameter.    (25)

	.  reduce 25 (src line 242)


state 98
	function_parameter:  T_IDENTIFIER = expr.    (22)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 22 (src line 228)


state 99
	listop:  [ range ].    (16)

	.  reduce 16 (src line 192)


state 100
	range:  expr T_RANGE_OPERATOR.expr 

	T_IDENTIFIER  shift 41
	T_FLOATING  shift 25
	T_NUMBER  shift 24
	(  shift 15
	-  shift 16
	.  error

	expr  goto 101
	number  goto 19
	floating_number  goto 20
	function_call  goto 17

state 101
	range:  expr T_RANGE_OPERATOR expr.    (38)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 36
	T_LT_EQUAL  shift 37
	T_GT_EQUAL  shift 38
	|  shift 33
	&  shift 32
	+  shift 27
	-  shift 28
	*  shift 29
	/  shift 30
	%  shift 31
	>  shift 34
	<  shift 35
	.  reduce 38 (src line 307)

Rule not reduced: class_decl_extends:  T_EXTENDS T_IDENTIFIER 
Rule not reduced: class_decl_extends:  
Rule not reduced: class_decl_does:  T_DOES class_decl_does_list 
Rule not reduced: class_decl_does:  
Rule not reduced: class_decl_does_list:  class_decl_does_list , T_IDENTIFIER 
Rule not reduced: class_decl_does_list:  T_IDENTIFIER 

67 terminals, 25 nonterminals
64 grammar rules, 102/2000 states
101 shift/reduce, 0 reduce/reduce conflicts reported
74 working sets used
memory: parser 185/30000
60 extra closures
417 shift entries, 1 exceptions
55 goto entries
87 entries saved by goto default
Optimizer space used: output 241/30000
241 table entries, 45 zero
maximum spread: 67, maximum offset: 100
