
state 0
	$accept: .start $end 

	T_IDENTIFIER  shift 17
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	T_INDENT  shift 13
	T_NEWLINE  shift 5
	T_IF  shift 20
	T_FOR  shift 21
	T_RETURN  shift 12
	(  shift 14
	-  shift 15
	.  error

	expr  goto 7
	number  goto 18
	floating_number  goto 19
	statement  goto 4
	function_decl_statement  goto 9
	function_call  goto 16
	statement_list  goto 3
	assignment  goto 8
	if_statement  goto 10
	for_statement  goto 11
	block  goto 6
	top_statement_list  goto 2
	start  goto 1

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  top_statement_list.    (1)

	.  reduce 1 (src line 138)


state 3
	top_statement_list:  statement_list.    (2)
	statement_list:  statement_list.T_NEWLINE statement 

	T_NEWLINE  shift 24
	.  reduce 2 (src line 144)


state 4
	statement_list:  statement.    (5)

	.  reduce 5 (src line 161)


state 5
	statement_list:  T_NEWLINE.    (6)

	.  reduce 6 (src line 167)


state 6
	statement:  block.    (7)

	.  reduce 7 (src line 170)


state 7
	statement:  expr.    (8)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 8 (src line 172)


state 8
	statement:  assignment.    (9)

	.  reduce 9 (src line 173)


state 9
	statement:  function_decl_statement.    (10)

	.  reduce 10 (src line 174)


10: shift/reduce conflict (shift 37(0), red'n 11(0)) on T_NEWLINE
state 10
	statement:  if_statement.    (11)
	if_statement:  if_statement.T_NEWLINE T_ELSEIF expr block 
	if_statement:  if_statement.T_NEWLINE T_ELSE block 

	T_NEWLINE  shift 37
	.  reduce 11 (src line 175)


state 11
	statement:  for_statement.    (12)

	.  reduce 12 (src line 176)


state 12
	statement:  T_RETURN.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 38
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 13
	block:  T_INDENT.statement_list T_OUTDENT 

	T_IDENTIFIER  shift 17
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	T_INDENT  shift 13
	T_NEWLINE  shift 5
	T_IF  shift 20
	T_FOR  shift 21
	T_RETURN  shift 12
	(  shift 14
	-  shift 15
	.  error

	expr  goto 7
	number  goto 18
	floating_number  goto 19
	statement  goto 4
	function_decl_statement  goto 9
	function_call  goto 16
	statement_list  goto 40
	assignment  goto 8
	if_statement  goto 10
	for_statement  goto 11
	block  goto 6

state 14
	expr:  (.expr ) 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 41
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 15
	expr:  -.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 42
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 16
	expr:  function_call.    (45)

	.  reduce 45 (src line 327)


state 17
	assignment:  T_IDENTIFIER.= expr 
	function_decl_statement:  T_IDENTIFIER.T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH block 
	expr:  T_IDENTIFIER.    (46)
	function_call:  T_IDENTIFIER.( function_call_parameter_list ) 

	T_FUNCTION_PROTOTYPE  shift 44
	(  shift 45
	=  shift 43
	.  reduce 46 (src line 330)


state 18
	expr:  number.    (47)

	.  reduce 47 (src line 334)


state 19
	expr:  floating_number.    (48)

	.  reduce 48 (src line 337)


state 20
	if_statement:  T_IF.expr block 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 46
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 21
	for_statement:  T_FOR.T_IDENTIFIER T_IN listop 

	T_IDENTIFIER  shift 47
	.  error


state 22
	number:  T_NUMBER.    (50)

	.  reduce 50 (src line 346)


state 23
	floating_number:  T_FLOATING.    (49)

	.  reduce 49 (src line 342)


state 24
	statement_list:  statement_list T_NEWLINE.statement 

	T_IDENTIFIER  shift 17
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	T_INDENT  shift 13
	T_IF  shift 20
	T_FOR  shift 21
	T_RETURN  shift 12
	(  shift 14
	-  shift 15
	.  error

	expr  goto 7
	number  goto 18
	floating_number  goto 19
	statement  goto 48
	function_decl_statement  goto 9
	function_call  goto 16
	assignment  goto 8
	if_statement  goto 10
	for_statement  goto 11
	block  goto 6

state 25
	expr:  expr +.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 49
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 26
	expr:  expr -.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 50
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 27
	expr:  expr *.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 51
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 28
	expr:  expr /.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 52
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 29
	expr:  expr %.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 53
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 30
	expr:  expr &.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 54
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 31
	expr:  expr |.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 55
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 32
	expr:  expr >.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 56
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 33
	expr:  expr <.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 57
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 34
	expr:  expr T_EQUAL.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 58
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 35
	expr:  expr T_LT_EQUAL.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 59
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 36
	expr:  expr T_GT_EQUAL.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 60
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 37
	if_statement:  if_statement T_NEWLINE.T_ELSEIF expr block 
	if_statement:  if_statement T_NEWLINE.T_ELSE block 

	T_ELSEIF  shift 61
	T_ELSE  shift 62
	.  error


state 38
	statement:  T_RETURN expr.    (13)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 13 (src line 177)


state 39
	expr:  T_IDENTIFIER.    (46)
	function_call:  T_IDENTIFIER.( function_call_parameter_list ) 

	(  shift 45
	.  reduce 46 (src line 330)


state 40
	block:  T_INDENT statement_list.T_OUTDENT 
	statement_list:  statement_list.T_NEWLINE statement 

	T_OUTDENT  shift 63
	T_NEWLINE  shift 24
	.  error


state 41
	expr:  ( expr.) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	)  shift 64
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  error


42: shift/reduce conflict (shift 34(0), red'n 44(11)) on T_EQUAL
42: shift/reduce conflict (shift 35(0), red'n 44(11)) on T_LT_EQUAL
42: shift/reduce conflict (shift 36(0), red'n 44(11)) on T_GT_EQUAL
42: shift/reduce conflict (shift 32(0), red'n 44(11)) on >
42: shift/reduce conflict (shift 33(0), red'n 44(11)) on <
state 42
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	expr:  - expr.    (44)

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	>  shift 32
	<  shift 33
	.  reduce 44 (src line 323)


state 43
	assignment:  T_IDENTIFIER =.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 65
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 44
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE.function_parameter_list T_FUNCTION_GLYPH block 
	function_parameter_list: .    (28)

	(  shift 67
	.  reduce 28 (src line 251)

	function_parameter_list  goto 66

state 45
	function_call:  T_IDENTIFIER (.function_call_parameter_list ) 
	function_call_parameter_list: .    (54)

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  reduce 54 (src line 366)

	expr  goto 70
	number  goto 18
	floating_number  goto 19
	function_call_parameter  goto 69
	function_call_parameter_list  goto 68
	function_call  goto 16

state 46
	if_statement:  T_IF expr.block 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	T_INDENT  shift 13
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  error

	block  goto 71

state 47
	for_statement:  T_FOR T_IDENTIFIER.T_IN listop 

	T_IN  shift 72
	.  error


state 48
	statement_list:  statement_list T_NEWLINE statement.    (4)

	.  reduce 4 (src line 153)


49: shift/reduce conflict (shift 34(0), red'n 32(8)) on T_EQUAL
49: shift/reduce conflict (shift 35(0), red'n 32(8)) on T_LT_EQUAL
49: shift/reduce conflict (shift 36(0), red'n 32(8)) on T_GT_EQUAL
49: shift/reduce conflict (shift 32(0), red'n 32(8)) on >
49: shift/reduce conflict (shift 33(0), red'n 32(8)) on <
state 49
	expr:  expr.+ expr 
	expr:  expr + expr.    (32)
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 32 (src line 275)


50: shift/reduce conflict (shift 34(0), red'n 33(8)) on T_EQUAL
50: shift/reduce conflict (shift 35(0), red'n 33(8)) on T_LT_EQUAL
50: shift/reduce conflict (shift 36(0), red'n 33(8)) on T_GT_EQUAL
50: shift/reduce conflict (shift 32(0), red'n 33(8)) on >
50: shift/reduce conflict (shift 33(0), red'n 33(8)) on <
state 50
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr - expr.    (33)
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 33 (src line 279)


51: shift/reduce conflict (shift 34(0), red'n 34(9)) on T_EQUAL
51: shift/reduce conflict (shift 35(0), red'n 34(9)) on T_LT_EQUAL
51: shift/reduce conflict (shift 36(0), red'n 34(9)) on T_GT_EQUAL
51: shift/reduce conflict (shift 32(0), red'n 34(9)) on >
51: shift/reduce conflict (shift 33(0), red'n 34(9)) on <
state 51
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr * expr.    (34)
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	>  shift 32
	<  shift 33
	.  reduce 34 (src line 283)


52: shift/reduce conflict (shift 34(0), red'n 35(9)) on T_EQUAL
52: shift/reduce conflict (shift 35(0), red'n 35(9)) on T_LT_EQUAL
52: shift/reduce conflict (shift 36(0), red'n 35(9)) on T_GT_EQUAL
52: shift/reduce conflict (shift 32(0), red'n 35(9)) on >
52: shift/reduce conflict (shift 33(0), red'n 35(9)) on <
state 52
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr / expr.    (35)
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	>  shift 32
	<  shift 33
	.  reduce 35 (src line 287)


53: shift/reduce conflict (shift 34(0), red'n 36(9)) on T_EQUAL
53: shift/reduce conflict (shift 35(0), red'n 36(9)) on T_LT_EQUAL
53: shift/reduce conflict (shift 36(0), red'n 36(9)) on T_GT_EQUAL
53: shift/reduce conflict (shift 32(0), red'n 36(9)) on >
53: shift/reduce conflict (shift 33(0), red'n 36(9)) on <
state 53
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr % expr.    (36)
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	>  shift 32
	<  shift 33
	.  reduce 36 (src line 291)


54: shift/reduce conflict (shift 34(0), red'n 37(7)) on T_EQUAL
54: shift/reduce conflict (shift 35(0), red'n 37(7)) on T_LT_EQUAL
54: shift/reduce conflict (shift 36(0), red'n 37(7)) on T_GT_EQUAL
54: shift/reduce conflict (shift 32(0), red'n 37(7)) on >
54: shift/reduce conflict (shift 33(0), red'n 37(7)) on <
state 54
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr & expr.    (37)
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 37 (src line 295)


55: shift/reduce conflict (shift 34(0), red'n 38(5)) on T_EQUAL
55: shift/reduce conflict (shift 35(0), red'n 38(5)) on T_LT_EQUAL
55: shift/reduce conflict (shift 36(0), red'n 38(5)) on T_GT_EQUAL
55: shift/reduce conflict (shift 32(0), red'n 38(5)) on >
55: shift/reduce conflict (shift 33(0), red'n 38(5)) on <
state 55
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr | expr.    (38)
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 38 (src line 299)


56: shift/reduce conflict (shift 34(0), red'n 39(0)) on T_EQUAL
56: shift/reduce conflict (shift 35(0), red'n 39(0)) on T_LT_EQUAL
56: shift/reduce conflict (shift 36(0), red'n 39(0)) on T_GT_EQUAL
56: shift/reduce conflict (shift 31(5), red'n 39(0)) on |
56: shift/reduce conflict (shift 30(7), red'n 39(0)) on &
56: shift/reduce conflict (shift 25(8), red'n 39(0)) on +
56: shift/reduce conflict (shift 26(8), red'n 39(0)) on -
56: shift/reduce conflict (shift 27(9), red'n 39(0)) on *
56: shift/reduce conflict (shift 28(9), red'n 39(0)) on /
56: shift/reduce conflict (shift 29(9), red'n 39(0)) on %
56: shift/reduce conflict (shift 32(0), red'n 39(0)) on >
56: shift/reduce conflict (shift 33(0), red'n 39(0)) on <
state 56
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr > expr.    (39)
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 39 (src line 303)


57: shift/reduce conflict (shift 34(0), red'n 40(0)) on T_EQUAL
57: shift/reduce conflict (shift 35(0), red'n 40(0)) on T_LT_EQUAL
57: shift/reduce conflict (shift 36(0), red'n 40(0)) on T_GT_EQUAL
57: shift/reduce conflict (shift 31(5), red'n 40(0)) on |
57: shift/reduce conflict (shift 30(7), red'n 40(0)) on &
57: shift/reduce conflict (shift 25(8), red'n 40(0)) on +
57: shift/reduce conflict (shift 26(8), red'n 40(0)) on -
57: shift/reduce conflict (shift 27(9), red'n 40(0)) on *
57: shift/reduce conflict (shift 28(9), red'n 40(0)) on /
57: shift/reduce conflict (shift 29(9), red'n 40(0)) on %
57: shift/reduce conflict (shift 32(0), red'n 40(0)) on >
57: shift/reduce conflict (shift 33(0), red'n 40(0)) on <
state 57
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr < expr.    (40)
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 40 (src line 307)


58: shift/reduce conflict (shift 34(0), red'n 41(0)) on T_EQUAL
58: shift/reduce conflict (shift 35(0), red'n 41(0)) on T_LT_EQUAL
58: shift/reduce conflict (shift 36(0), red'n 41(0)) on T_GT_EQUAL
58: shift/reduce conflict (shift 31(5), red'n 41(0)) on |
58: shift/reduce conflict (shift 30(7), red'n 41(0)) on &
58: shift/reduce conflict (shift 25(8), red'n 41(0)) on +
58: shift/reduce conflict (shift 26(8), red'n 41(0)) on -
58: shift/reduce conflict (shift 27(9), red'n 41(0)) on *
58: shift/reduce conflict (shift 28(9), red'n 41(0)) on /
58: shift/reduce conflict (shift 29(9), red'n 41(0)) on %
58: shift/reduce conflict (shift 32(0), red'n 41(0)) on >
58: shift/reduce conflict (shift 33(0), red'n 41(0)) on <
state 58
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr T_EQUAL expr.    (41)
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 41 (src line 311)


59: shift/reduce conflict (shift 34(0), red'n 42(0)) on T_EQUAL
59: shift/reduce conflict (shift 35(0), red'n 42(0)) on T_LT_EQUAL
59: shift/reduce conflict (shift 36(0), red'n 42(0)) on T_GT_EQUAL
59: shift/reduce conflict (shift 31(5), red'n 42(0)) on |
59: shift/reduce conflict (shift 30(7), red'n 42(0)) on &
59: shift/reduce conflict (shift 25(8), red'n 42(0)) on +
59: shift/reduce conflict (shift 26(8), red'n 42(0)) on -
59: shift/reduce conflict (shift 27(9), red'n 42(0)) on *
59: shift/reduce conflict (shift 28(9), red'n 42(0)) on /
59: shift/reduce conflict (shift 29(9), red'n 42(0)) on %
59: shift/reduce conflict (shift 32(0), red'n 42(0)) on >
59: shift/reduce conflict (shift 33(0), red'n 42(0)) on <
state 59
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr T_LT_EQUAL expr.    (42)
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 42 (src line 315)


60: shift/reduce conflict (shift 34(0), red'n 43(0)) on T_EQUAL
60: shift/reduce conflict (shift 35(0), red'n 43(0)) on T_LT_EQUAL
60: shift/reduce conflict (shift 36(0), red'n 43(0)) on T_GT_EQUAL
60: shift/reduce conflict (shift 31(5), red'n 43(0)) on |
60: shift/reduce conflict (shift 30(7), red'n 43(0)) on &
60: shift/reduce conflict (shift 25(8), red'n 43(0)) on +
60: shift/reduce conflict (shift 26(8), red'n 43(0)) on -
60: shift/reduce conflict (shift 27(9), red'n 43(0)) on *
60: shift/reduce conflict (shift 28(9), red'n 43(0)) on /
60: shift/reduce conflict (shift 29(9), red'n 43(0)) on %
60: shift/reduce conflict (shift 32(0), red'n 43(0)) on >
60: shift/reduce conflict (shift 33(0), red'n 43(0)) on <
state 60
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	expr:  expr T_GT_EQUAL expr.    (43)

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 43 (src line 319)


state 61
	if_statement:  if_statement T_NEWLINE T_ELSEIF.expr block 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 73
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 62
	if_statement:  if_statement T_NEWLINE T_ELSE.block 

	T_INDENT  shift 13
	.  error

	block  goto 74

state 63
	block:  T_INDENT statement_list T_OUTDENT.    (3)

	.  reduce 3 (src line 151)


state 64
	expr:  ( expr ).    (31)

	.  reduce 31 (src line 265)


state 65
	assignment:  T_IDENTIFIER = expr.    (20)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 20 (src line 209)


state 66
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list.T_FUNCTION_GLYPH block 

	T_FUNCTION_GLYPH  shift 75
	.  error


state 67
	function_parameter_list:  (.function_parameters ) 
	function_parameter_list:  (.) 

	T_IDENTIFIER  shift 79
	)  shift 77
	.  error

	function_parameters  goto 76
	function_parameter  goto 78

state 68
	function_call_parameter_list:  function_call_parameter_list., function_call_parameter 
	function_call:  T_IDENTIFIER ( function_call_parameter_list.) 

	)  shift 81
	,  shift 80
	.  error


state 69
	function_call_parameter_list:  function_call_parameter.    (53)

	.  reduce 53 (src line 361)


state 70
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 
	function_call_parameter:  expr.    (51)

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 51 (src line 350)


state 71
	if_statement:  T_IF expr block.    (17)

	.  reduce 17 (src line 190)


state 72
	for_statement:  T_FOR T_IDENTIFIER T_IN.listop 

	[  shift 83
	.  error

	listop  goto 82

state 73
	if_statement:  if_statement T_NEWLINE T_ELSEIF expr.block 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	T_INDENT  shift 13
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  error

	block  goto 84

state 74
	if_statement:  if_statement T_NEWLINE T_ELSE block.    (19)

	.  reduce 19 (src line 201)


state 75
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH.block 

	T_INDENT  shift 13
	.  error

	block  goto 85

state 76
	function_parameters:  function_parameters., function_parameter 
	function_parameter_list:  ( function_parameters.) 

	)  shift 87
	,  shift 86
	.  error


state 77
	function_parameter_list:  ( ).    (27)

	.  reduce 27 (src line 248)


state 78
	function_parameters:  function_parameter.    (25)

	.  reduce 25 (src line 239)


state 79
	function_parameter:  T_IDENTIFIER.= expr 
	function_parameter:  T_IDENTIFIER.T_IDENTIFIER 
	function_parameter:  T_IDENTIFIER.    (23)

	T_IDENTIFIER  shift 89
	=  shift 88
	.  reduce 23 (src line 226)


state 80
	function_call_parameter_list:  function_call_parameter_list ,.function_call_parameter 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 70
	number  goto 18
	floating_number  goto 19
	function_call_parameter  goto 90
	function_call  goto 16

state 81
	function_call:  T_IDENTIFIER ( function_call_parameter_list ).    (55)

	.  reduce 55 (src line 372)


state 82
	for_statement:  T_FOR T_IDENTIFIER T_IN listop.    (16)

	.  reduce 16 (src line 185)


state 83
	listop:  [.] 
	listop:  [.range ] 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	]  shift 91
	.  error

	expr  goto 93
	number  goto 18
	floating_number  goto 19
	function_call  goto 16
	range  goto 92

state 84
	if_statement:  if_statement T_NEWLINE T_ELSEIF expr block.    (18)

	.  reduce 18 (src line 195)


state 85
	function_decl_statement:  T_IDENTIFIER T_FUNCTION_PROTOTYPE function_parameter_list T_FUNCTION_GLYPH block.    (29)

	.  reduce 29 (src line 256)


state 86
	function_parameters:  function_parameters ,.function_parameter 

	T_IDENTIFIER  shift 79
	.  error

	function_parameter  goto 94

state 87
	function_parameter_list:  ( function_parameters ).    (26)

	.  reduce 26 (src line 244)


state 88
	function_parameter:  T_IDENTIFIER =.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 95
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 89
	function_parameter:  T_IDENTIFIER T_IDENTIFIER.    (22)

	.  reduce 22 (src line 222)


state 90
	function_call_parameter_list:  function_call_parameter_list , function_call_parameter.    (52)

	.  reduce 52 (src line 354)


state 91
	listop:  [ ].    (14)

	.  reduce 14 (src line 180)


state 92
	listop:  [ range.] 

	]  shift 96
	.  error


state 93
	range:  expr.T_RANGE_OPERATOR expr 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	T_RANGE_OPERATOR  shift 97
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  error


state 94
	function_parameters:  function_parameters , function_parameter.    (24)

	.  reduce 24 (src line 232)


state 95
	function_parameter:  T_IDENTIFIER = expr.    (21)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 21 (src line 218)


state 96
	listop:  [ range ].    (15)

	.  reduce 15 (src line 182)


state 97
	range:  expr T_RANGE_OPERATOR.expr 

	T_IDENTIFIER  shift 39
	T_FLOATING  shift 23
	T_NUMBER  shift 22
	(  shift 14
	-  shift 15
	.  error

	expr  goto 98
	number  goto 18
	floating_number  goto 19
	function_call  goto 16

state 98
	range:  expr T_RANGE_OPERATOR expr.    (30)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr.& expr 
	expr:  expr.| expr 
	expr:  expr.> expr 
	expr:  expr.< expr 
	expr:  expr.T_EQUAL expr 
	expr:  expr.T_LT_EQUAL expr 
	expr:  expr.T_GT_EQUAL expr 

	T_EQUAL  shift 34
	T_LT_EQUAL  shift 35
	T_GT_EQUAL  shift 36
	|  shift 31
	&  shift 30
	+  shift 25
	-  shift 26
	*  shift 27
	/  shift 28
	%  shift 29
	>  shift 32
	<  shift 33
	.  reduce 30 (src line 263)


66 terminals, 21 nonterminals
56 grammar rules, 99/2000 states
101 shift/reduce, 0 reduce/reduce conflicts reported
70 working sets used
memory: parser 180/30000
59 extra closures
413 shift entries, 1 exceptions
51 goto entries
88 entries saved by goto default
Optimizer space used: output 241/30000
241 table entries, 49 zero
maximum spread: 66, maximum offset: 97
